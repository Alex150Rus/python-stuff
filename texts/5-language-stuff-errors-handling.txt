Обработка ошибок
Час­то при работе прог­раммы компь­ютер стал­кива­ется с раз­ными проб­лемами. 
Нап­ример, файл не най­ден, сеть недос­тупна, кон­чилось мес­то на дис­ке. Если прог­раммист об этом не позабо­тил­ся, 
то интер­пре­татор Python прос­то завер­шит работу с ошиб­кой. Но есть спо­соб пре­дус­мотреть неуря­дицы 
пря­мо в коде и про­дол­жать работу — конс­трук­ция try... except.

Выг­лядит она вот так:
try:
    # Тут какие-то команды,
    # которые могут привести к ошибке
except:
    # Наши действия, если ошибка произошла
Мож­но ловить кон­крет­ные типы оши­бок, если пос­ле сло­ва except ука­зать наз­вание типа. 
К при­меру, KeyboardInterrupt сра­баты­вает, если поль­зователь пыта­ется завер­шить прог­рамму, нажав Ctrl-C. 
В нашей влас­ти зап­ретить это делать!

Да что там, мы можем даже раз­решить делить на ноль, если отло­вим ошиб­ку ZeroDivisionError. Вот как это будет выг­лядеть:
try:
    k = 1 / 0
except ZeroDivisionError:
    k = 'over 9000'
print(k)